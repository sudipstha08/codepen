{"version":3,"sources":["assets/settings.svg","assets/view-change.svg","assets/down-arrow.svg","assets/pinned.svg","assets/cloud.svg","assets/nerd.svg","assets/pen.svg","assets/logo.svg","components/Editor/index.jsx","components/Header/index.jsx","components/UseLocalStorage/index.jsx","components/Pen/index.jsx","containers/PenPage/index.jsx","app.jsx","index.js"],"names":["module","exports","Editor","displayName","language","value","onChange","useState","open","setOpen","className","style","color","display","fontWeight","fontSize","src","SettingsIcon","alt","height","paddingRight","cursor","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","autoCloseBrackets","autoCloseTags","Header","penTitle","setPenTitle","isTitleDisabled","setIsTitleDisabled","titleRef","createRef","useEffect","titleRefCurrent","current","addEventListener","event","removeEventListener","Logo","ref","e","target","readOnly","contentEditable","PenIcon","focus","CloudIcon","ViewChangeIcon","PinnedIcon","DownArrowIcon","NerdImg","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","Pen","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeOut","setTimeout","clearTimeout","title","frameBorder","sandbox","width","allowFullScreen","PenPage","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea333cb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/settings.473a0fa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/view-change.a3f72962.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-arrow.8a128b27.svg\";","module.exports = __webpack_public_path__ + \"static/media/pinned.213528bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud.47ce9d1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/nerd.9d5c7a8c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.367027a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d7f89524.svg\";","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport 'codemirror/addon/edit/closebrackets.js'\nimport 'codemirror/addon/edit/closetag.js'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\nimport SettingsIcon from '../../assets/settings.svg'\n\nconst  Editor = ({ displayName, language, value, onChange }) => {\n  const [open, setOpen] = useState(true)\n\n  const handleChange = (editor, data, value) => {\n    onChange(value)\n  }\n\n  return (\n    <div className={`editor ${open ? '' : 'editor--collapsed'}`}>\n      <div className=\"editor__title\">\n        <div style={{ color: '#aaaebc', display: 'flex', fontWeight:'700', fontSize: 18 }}>\n          <img src={SettingsIcon} alt=\"settings\" height=\"18\" style={{ paddingRight: '.25em', cursor: 'pointer' }} />\n          {displayName}\n        </div>\n        <button \n          type=\"button\"\n          className=\"editor__expand-close-btn\"\n          onClick={() => setOpen(prevOpen => !prevOpen)}\n        >\n          <FontAwesomeIcon icon={open ? faCompressAlt: faExpandAlt } />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={handleChange}\n        value={value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n          theme: 'material',\n          autoCloseBrackets: true,\n          autoCloseTags: true\n        }}\n      />\n    </div>\n  )\n}\n\nEditor.propTypes={\n  value: PropTypes.string,\n}\n\nexport { Editor }\n","import React, { useState, createRef, useEffect } from 'react'\n\nimport ViewChangeIcon from '../../assets/view-change.svg'\nimport DownArrowIcon from '../../assets/down-arrow.svg'\nimport SettingsIcon from '../../assets/settings.svg'\nimport PinnedIcon from '../../assets/pinned.svg'\nimport CloudIcon from '../../assets/cloud.svg'\nimport NerdImg from '../../assets/nerd.svg'\nimport PenIcon from '../../assets/pen.svg'\nimport Logo from '../../assets/logo.svg'\nimport './style.scss'\n\nconst Header = () => {\n  const [penTitle, setPenTitle] = useState('Untitled')\n  const [isTitleDisabled, setIsTitleDisabled] = useState(true)\n  const titleRef = createRef()\n\n  const handlePenIconClick = () => {\n    setIsTitleDisabled(false)\n    if(penTitle === 'Untitled') { setPenTitle('') }\n    titleRef.current.focus()\n  }\n\n  const handleTitleChange= (e) => {\n    setPenTitle(e.target.value)\n  }\n\n  useEffect(() => {\n    const titleRefCurrent = titleRef?.current\n    titleRefCurrent.addEventListener('focusout', (event) => {\n      setIsTitleDisabled(true)  \n    });\n\n    return() => titleRefCurrent.removeEventListener('focusout', setIsTitleDisabled)\n  }, [titleRef])\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__logo-wrapper\">\n        <div className=\"header__logo\">\n          <img src={Logo} alt=\"logo\" />\n        </div>\n        <div className=\"header__title\">\n          <div className=\"header__pen-name\">\n            <input \n              ref={titleRef}\n              type=\"text\" \n              value={penTitle} \n              onChange={handleTitleChange} \n              readOnly={isTitleDisabled}\n              contentEditable={true}\n            />\n            <img src={PenIcon} alt=\"pen\" onClick={handlePenIconClick} />\n          </div>\n          <div className=\"header__username\">\n            <p>Codepen clone</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"header__btns\">\n        <button className=\"btn btn-save\">\n          <img src={CloudIcon} alt=\"cloud\"/>\n          <span>Save</span>   \n        </button>\n        <button className=\"btn btn-settings\">\n          <img src={SettingsIcon} alt=\"settings\" />\n          Settings\n        </button>\n        <button className=\"btn btn-view-change\">\n          <img src={ViewChangeIcon} alt=\"view-change\" />\n          Change View\n        </button>\n        <button className=\"btn pinned-items\">\n          <img src={PinnedIcon} alt=\"pinned\" height=\"25\" />\n          <img src={DownArrowIcon} alt=\"down-arrow\" />\n        </button>\n        <button className=\"btn profile\">\n          <img src={NerdImg} alt=\"profile\" height=\"56\" />\n        </button>\n      </div>\n    </header>\n  )\n}\n\nexport { Header}\n","import { useState, useEffect } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nconst useLocalStorage = (key, initialValue) => {\n  const  prefixedKey = PREFIX + key\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n\n    if(jsonValue != null) return JSON.parse(jsonValue)\n\n    if(typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n\nexport { useLocalStorage }\n","import React, { useState, useEffect } from 'react'\nimport { Editor } from '../Editor'\nimport { useLocalStorage } from '../UseLocalStorage'\nimport { Header } from '../Header'\n\nconst Pen = () => {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setCss] = useLocalStorage('css', '')\n  const [js, setJs] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n    useEffect(() => {\n      const timeOut = setTimeout(() => {\n        setSrcDoc(`\n          <html>\n          <body>${html}</body>\n          <style>${css}</style>\n\n          <script>${js}</script>\n        </html>\n        `)\n      }, 250)\n\n      return () => {\n        clearTimeout(timeOut)\n      }\n    }, [html, css, js])\n\n  return (\n   <>\n    <Header />\n    <div className=\"pane top-pane\">\n      <Editor   \n        language=\"xml\" \n        displayName=\"HTML\" \n        value={html} \n        onChange={setHtml} \n      />\n     \n       <Editor   \n        language=\"css\" \n        displayName=\"CSS\" \n        value={css} \n        onChange={setCss} \n      />\n        <Editor   \n        language=\"javascript\" \n        displayName=\"JS\" \n        value={js} \n        onChange={setJs} \n      />\n    </div>\n    <div className=\"pane\">\n      <iframe \n        srcDoc={srcDoc}\n        title=\"output\" \n        frameBorder=\"0\" \n        sandbox=\"allow-scripts\" \n        width=\"100%\" \n        height=\"100%\" \n        allowFullScreen\n      />\n    </div>\n   </>\n  );\n}\n\nexport {Pen};\n","import React from 'react'\nimport { Pen } from \"../../components\"\n\nconst PenPage = () => {\n  return (\n    <>\n      <Pen />\n    </>\n  )\n}\n\nexport default PenPage\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport PenPage from \"./containers/PenPage\"\n\nconst App = () => (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Switch>\n      <Route exact path=\"/\" component={PenPage} />\n    </Switch>\n</BrowserRouter>\n)\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}